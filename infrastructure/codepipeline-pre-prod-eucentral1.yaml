AWSTemplateFormatVersion: "2010-09-09"
Mappings:
  General:
    VpcId:
      preprod: vpc-053f7025769117480
    Subnet:
      preprod: subnet-0cc872376ec10fdf2
    SecurityGroupId:
      preprod: sg-0457370a44fedef2a
    ArtifactAccessPolicy:
      preprod: arn:aws:iam::061416964074:policy/preprod-artifact-access-policy

Resources:
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: rio-node-pipeline
      RoleArn: arn:aws:iam::061416964074:role/rio-node-codepipeline-role
      ArtifactStores:
        - ArtifactStore:
            Type: S3
            Location: rio-node-artifacts-eu-central-1
            EncryptionKey:
              Type: 'KMS'
              Id: 'arn:aws:kms:eu-central-1:061416964074:key/mrk-91b90713b54848888c067e5f2c0ee2a4'
          Region: eu-central-1
          # todo for dr region
      Stages:
        - Name: Source
          Actions:
            - Name: RioNodeSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: '1'
              RunOrder: 1
              Configuration:
                BranchName: develop
                PollForSourceChanges: 'false'
                RepositoryName: rio-node
              OutputArtifacts:
                - Name: SourceArtifact
              InputArtifacts: []
              Region: eu-central-1
        - Name: BuildSource
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              RunOrder: 1
              Configuration:
                ProjectName: RioNodePreProd
              OutputArtifacts:
                - Name: BuildArtifact
              InputArtifacts:
                - Name: SourceArtifact
              Region: eu-central-1
        - Name: DeployStg
          Actions:
            - Name: Stg
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              InputArtifacts:
                - Name: SourceArtifact
                - Name: BuildArtifact
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND"
                ParameterOverrides: !Sub |
                  {
                    "ImageURI" : { "Fn::GetParam" : ["BuildArtifact", "imageDetails.json", "ImageURI"] },
                    "Stage":  "stg",
                    "Vpc": "vpc-053f7025769117480",
                    "PublicSubnets": "subnet-0cc872376ec10fdf2,subnet-0603022063d3c878f,subnet-06d970c783c6a7aef",
                    "PrivateSubnets": "subnet-0e271c23ad2ee07d2,subnet-00f33723959afb14c,subnet-0dfdde813ec7e20e3",
                    "SecurityGroups": "sg-0457370a44fedef2a",
                    "HostedZone": "node.riocorenetwork.com",
                    "DesiredCount": "4"
                  }
                StackName: rio-node-stg
                TemplatePath: SourceArtifact::infrastructure/deploy.yml
                RoleArn:  arn:aws:iam::061416964074:role/rio-node-codepipeline-role
              RunOrder: 1

  DeployToStg:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: RioNodePreProd
      Artifacts:
        Type: CODEPIPELINE
      VpcConfig:
        VpcId: !FindInMap [General, VpcId, preprod]
        Subnets:
          - !FindInMap [General, Subnet, preprod]
        SecurityGroupIds:
          - !FindInMap [General, SecurityGroupId, preprod]
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        Type: LINUX_CONTAINER
        PrivilegedMode: true
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: infrastructure/buildspec.yml
      Cache:
        Type: S3
        Location: rio-node-artifacts-eu-central-1/rio-node-codebuild-cache
        Modes:
          - LOCAL_CUSTOM_CACHE
          - LOCAL_DOCKER_LAYER_CACHE
      TimeoutInMinutes: 120

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: rio-node-codebuild-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - codebuild.amazonaws.com
      Policies:
        - PolicyName: RioCodeBuildPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - logs:*
                  - ec2:CreateNetworkInterface
                  - ec2:DescribeDhcpOptions
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DeleteNetworkInterface
                  - ec2:DescribeSubnets
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeVpcs
                  - ec2:CreateNetworkInterfacePermission
                  - codecommit:GitPull
                  - ssm:GetParameter
                  - ssm:GetParameters
                  - ssm:GetParameterByPath
                  - cloudformation:*
                  - s3:*
                  - iam:*
                  - lambda:*
                  - acm:*
                  - route53:*
                  - apigateway:*
                  - waf:*
                  - sqs:*
                  - dynamodb:*
                  - kinesisanalytics:*
                  - kinesis:*
                  - sns:*
                  - events:*
                  - ecr:BatchCheckLayerAvailability
                  - ecr:CompleteLayerUpload
                  - ecr:GetAuthorizationToken
                  - ecr:InitiateLayerUpload
                  - ecr:PutImage
                  - ecr:UploadLayerPart
                  - ecs:*
                Resource: '*'
      ManagedPolicyArns:
        - !FindInMap [General, ArtifactAccessPolicy, preprod]

  AmazonCloudWatchEventRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        -
          Effect: Allow
          Principal:
            Service:
            - events.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      Policies:
      -
        PolicyName: cwe-pipeline-execution
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          -
            Effect: Allow
            Action: codepipeline:StartPipelineExecution
            Resource: !Join [ '', [ 'arn:aws:codepipeline:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', !Ref Pipeline ] ]


  AmazonCloudWatchEventRule:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
        - aws.codecommit
        detail-type:
        - 'CodeCommit Repository State Change'
        resources:
        - !Join [ '', [ 'arn:aws:codecommit:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':rio-node' ] ]
        detail:
          event:
          - referenceCreated
          - referenceUpdated
          referenceType:
          - branch
          referenceName:
          - develop
      Targets:
      -
        Arn:
          !Join [ '', [ 'arn:aws:codepipeline:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', !Ref Pipeline ] ]
        RoleArn: !GetAtt AmazonCloudWatchEventRole.Arn
        Id: codepipeline-Pipeline
